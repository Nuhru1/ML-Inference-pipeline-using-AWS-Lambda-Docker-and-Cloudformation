AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.8

  Sample SAM Template for lambda-pytorch-example

Parameters:
  InputBucketName:
    Type: String
    Default: 'tf-lambda-inferenceTable'
  MyTable:
    Type: String
    Default: 'inferenceTable-tf'
Resources:
  InputS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref InputBucketName
  TensorFlowInferenceFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      MemorySize: 5000
      Timeout: 400
      Policies:
        - AmazonDynamoDBFullAccess
            # TableName: !Ref MyTable
        - S3ReadPolicy:
            BucketName: !Ref InputBucketName
      Events:
        FileUpload:
          Type: S3
          Properties:
            Bucket: !Ref InputS3Bucket     # This must be the name of an S3 bucket declared in the same template file
            Events: s3:ObjectCreated:*
            Filter: 
              S3Key:
                Rules:
                  - Name: suffix
                    Value: '.jpg'
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .
      DockerTag: python3.8-v1
Outputs:
  TensorFlowInferenceFunction:
    Description: "TensorFlowInference Lambda Function ARN"
    Value: !GetAtt TensorFlowInferenceFunction.Arn
  TensorFlowInferenceFunctionIamRole:
    Description: "Implicit IAM Role created for TensorFlowInference function"
    Value: !GetAtt TensorFlowInferenceFunction.Arn